{"version":3,"sources":["components/title/title.js","components/news_post/news_post.js","components/input/input.js","components/select/select.js","components/pagination/pagination.js","containers/News.js","serviceWorker.js","index.js"],"names":["Title","_ref","title","react_default","a","createElement","className","defaultProps","NewsPost","author","created_at","num_comments","points","url","href","concat","Date","toLocaleDateString","Input","onChange","value","onKeyPress","placeholder","htmlFor","Select","handleChange","options","map","_ref2","label","key","Pagination","onClick","page","lastPage","data-name","gapBtns","middleBtn","lastBtns","num","renderPaginationBtns","BASE_PATH","SEARCH_PATH","SEARCH_PARAM","PAGE_HITS","PAGE_PARAM","HITS","News","state","searchQuery","result","hitsPerPage","fetchData","fetch","then","res","json","_this","setNews","catch","error","getSearch","_this$state","setState","handleInputChange","target","handleHitsChange","_ref3","handlePageChange","_ref4","btnType","getAttribute","isNaN","updatePage","number","_this$state2","_this$state3","this","_this$state4","_result$hits","hits","nbPages","components_title_title","components_select_select","pagination_pagination","input_input","_ref5","objectID","news_post_news_post","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_News","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10b3139d.chunk.js","sourcesContent":["import React, {Components} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './title.css';\r\n\r\nconst Title = ({title}) => (\r\n\t<h1 className=\"link link--kukuri\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n\ttitle: PropTypes.string\r\n};\r\n\r\nTitle.defaultProps = {\r\n\ttitle: 'Simple title'\r\n};\r\n\r\nexport default Title;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './news_post.css'\r\n\r\nconst NewsPost = ({author, created_at, num_comments, title, points, url}) => (\r\n\t<li className=\"news\">\r\n\t\t<div className=\"description\">\r\n\t\t\t<a href={url} className=\"newsTitle\">{title}</a>\r\n\t\t\t<span className=\"text\">{`${points} points`}</span>\r\n\t\t\t<span className=\"comments\">{`${num_comments} comments`}</span>\r\n\t\t\t<span className=\"date\">{new Date(created_at).toLocaleDateString()}</span>\r\n\t\t\t<span className=\"author\">author: {author}</span>\r\n\t\t</div>\r\n\t</li>\r\n);\r\n\r\nNewsPost.propTypes = {\r\n\tauthor: PropTypes.string,\r\n\tcreated_at: PropTypes.string.isRequired,\r\n\tnum_comments: PropTypes.number,\r\n\ttitle: PropTypes.string,\r\n\tpoints: PropTypes.number,\r\n\turl: PropTypes.string\r\n};\r\n\r\nNewsPost.defaultProps = {\r\n\tauthor: '',\r\n\tnum_comments: 0,\r\n\ttitle: 'Here should be a title',\r\n\tpoints: 0,\r\n\turl: '#'\r\n};\r\n\r\nexport default NewsPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './input.css';\r\n\r\nconst Input = ({onChange, value , onKeyPress}) => (\r\n\t<span className=\"input input--minoru\">\r\n\t\t<div className=\"inputWrapper\">\r\n\t\t\t<input className=\"input__field input__field--yoko\"\r\n\t\t\t   placeholder=\"Click to search\"\r\n\t\t\t   onChange={onChange}\r\n\t\t\t   onKeyPress={onKeyPress}\r\n\t\t\t   value={value}/>\r\n\t\t\t<label className=\"input__label input__label--yoko\" htmlFor=\"input-16\">\r\n\t\t\t\t<span className=\"input__label-content input__label-content--yoko\">Click to search</span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</span>\r\n);\r\n\r\nInput.propTypes = {\r\n\tonChange: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n\tonKeyPress: PropTypes.func\r\n};\r\n\r\nInput.defaultProps = {\r\n\tonChange: () => {},\r\n\tonKeyPress: () => {},\r\n\tvalue: ''\r\n};\r\n\r\nexport default Input\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './select.css';\r\n\r\nconst Select = ({handleChange, options, value}) => (\r\n\t<div className=\"selectWrapper\">\r\n\t\t<select value={value} onChange={handleChange}>\r\n\t\t\t{options.map(({value, label}) =>\r\n\t\t\t\t<option key={value} value={value}>{label}</option>\r\n\t\t\t)}\r\n\t\t</select>\r\n\t\t<span className=\"selectText\">per page</span>\r\n\t</div>\r\n);\r\n\r\nSelect.propTypes = {\r\n\thandleChange: PropTypes.func,\r\n\toptions: PropTypes.array,\r\n\tvalue: PropTypes.number,\r\n};\r\n\r\nSelect.defaultProps = {\r\n\thandleChange: () => {},\r\n\toptions: [],\r\n\tvalue: 0,\r\n};\r\n\r\n\r\nexport default Select\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './pagination.css';\r\n\r\nconst renderPaginationBtns = (onClick, page, lastPage) => {\r\n\tconst startBtns = [page, page + 1, page + 2];\r\n\tconst gapBtns = [page - 2, page - 1, page];\r\n\tconst middleBtn = [ '...' ];\r\n\tconst lastBtns = [lastPage - 3, lastPage - 2, lastPage - 1];\r\n\r\n\tlet btnsArr = [];\r\n\r\n\tif (page < lastPage - 6) {\r\n\t\tbtnsArr = [...startBtns, ...middleBtn, ...lastBtns]\r\n\t} else if (page < lastPage - 4) {\r\n\t\tbtnsArr = [...gapBtns, ...middleBtn, ...lastBtns]\r\n\t} else if (page < lastPage - 3) {\r\n\t\tbtnsArr = [...gapBtns, ...lastBtns] // last 6 pages\r\n\t} else {\r\n\t\tbtnsArr = [...middleBtn, ...lastBtns] // last 3 pages\r\n\t}\r\n\r\n\treturn btnsArr.map(num => {\r\n\t\treturn num === '...' ?\r\n\t\t\tnum :\r\n\t\t\t<button\r\n\t\t\t\tkey={num}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tdata-name={num}\r\n\t\t\t\tclassName={num === page ? 'active' : ''}\r\n\t\t\t>{num}</button>\r\n\t});\r\n};\r\n\r\n\r\nconst Pagination = ({onClick, page, lastPage}) => (\r\n\t<div className=\"paginationWrapper\">\r\n\t\t{page !== 0 && <button onClick={onClick} data-name=\"prev\">{'<<'}</button>}\r\n\t\t{renderPaginationBtns(onClick, page, lastPage)}\r\n\t\t{ page !== lastPage - 1 && <button onClick={onClick} data-name=\"next\">{'>>'}</button> }\r\n\t</div>\r\n);\r\n\r\nPagination.propTypes = {\r\n\tonClick: PropTypes.func,\r\n\tpage: PropTypes.number,\r\n\tlastPage: PropTypes.number,\r\n}\r\n\r\nPagination.defaultProps = {\r\n\tonClick: () => {},\r\n\tpage: 0,\r\n\tlastPage: 0,\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {Component} from 'react';\r\n\r\nimport Title from '../components/title/title';\r\nimport NewsPost from '../components/news_post/news_post';\r\nimport Input from '../components/input/input';\r\nimport Select from '../components/select/select';\r\nimport Pagination from '../components/pagination/pagination';\r\nimport './News.css';\r\n\r\nconst BASE_PATH = 'https://hn.algolia.com/api/v1';\r\nconst SEARCH_PATH = '/search';\r\nconst SEARCH_PARAM = 'query=';\r\nconst PAGE_HITS = 'hitsPerPage=';\r\nconst PAGE_PARAM = 'page=';\r\n\r\nconst HITS = [\r\n\t{\r\n\t\tvalue: 10,\r\n\t\tlabel: 10\r\n\t},\r\n\t{\r\n\t\tvalue: 20,\r\n\t\tlabel: 20\r\n\t},\r\n\t{\r\n\t\tvalue: 30,\r\n\t\tlabel: 30\r\n\t}\r\n];\r\n\r\nclass News extends React.Component{\r\n\r\n\tstate = {\r\n\t\tsearchQuery: '',\r\n\t\tresult: {},\r\n\t\thitsPerPage: 20,\r\n\t\tpage: 0\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {searchQuery, hitsPerPage, page} = this.state;\r\n\t\tthis.fetchData(searchQuery, hitsPerPage, page);\r\n\t}\r\n\r\n\tfetchData = (searchQuery ,hitsPerPage, page) => {\r\n\t\tfetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchQuery}&${PAGE_HITS}${hitsPerPage}&${PAGE_PARAM}${page}`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => this.setNews(result))\r\n\t\t\t.catch(error => error);\r\n\t};\r\n\r\n\tgetSearch = ({key}) => {\r\n\t\tif (key === 'Enter'){\r\n\t\t\tconst {searchQuery, hitsPerPage} = this.state;\r\n\t\t\tthis.setState({\r\n\t\t\t\tpage: 0\r\n\t\t\t})\r\n\t\t\tthis.fetchData(searchQuery, hitsPerPage, 0);\r\n\t\t}\r\n\t};\r\n\r\n\thandleInputChange = ({target: {value}}) => {\r\n\t\tthis.setState ({\r\n\t\t\tsearchQuery: value\r\n\t\t})\r\n\t}\r\n\r\n\tsetNews = (result) => {\r\n\t\tthis.setState({result});\r\n\t}\r\n\r\n\thandleHitsChange = ({target : {value}}) => {\r\n\t\tconst {searchQuery} = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\thitsPerPage: +value,\r\n\t\t\tpage: 0\r\n\t\t}, () => {\r\n\t\t\tthis.fetchData(searchQuery, this.state.hitsPerPage, 0);\r\n\t\t})\r\n\t};\r\n\r\n\thandlePageChange = ({ target }) => {\r\n\t\tconst btnType = target.getAttribute('data-name');\r\n\t\tlet { page } = this.state;\r\n\r\n\t\tif(!isNaN(btnType)) {\r\n\t\t\tthis.updatePage(+btnType);\r\n\t\t} else {\r\n\t\t\tswitch (btnType) {\r\n\t\t\t\tcase 'next':\r\n\t\t\t\t\tthis.updatePage(page + 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'prev':\r\n\t\t\t\t\tthis.updatePage(page - 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tupdatePage = (number) => {\r\n\t\tconst { searchQuery, hitsPerPage } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tpage: number,\r\n\t\t}, () => {\r\n\t\t\tthis.fetchData(searchQuery, hitsPerPage, number);\r\n\t\t})\r\n\t};\r\n\r\n\trender(){\r\n\t\tconst {searchQuery, result, hitsPerPage} = this.state;\r\n\t\tconst {hits = [] , page , nbPages} = result;\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<div className=\"div_hacker_p\">\r\n\t\t\t\t\t<p className=\"p_hacker\"> With the help of Yauhen Kavalchuk</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Title title=\"Hacker News\" />\r\n\t\t\t\t<Select handleChange={this.handleHitsChange} options={HITS} value={hitsPerPage} />\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tonClick={this.handlePageChange}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\tlastPage={nbPages}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input onKeyPress={this.getSearch} onChange={this.handleInputChange} value={searchQuery} />\r\n\t\t\t\t<ul className=\"newsList\">\r\n\t\t\t\t\t{hits.map(({ author, created_at, num_comments, objectID, title, points, url }) =>\r\n\t\t\t\t\t\t<NewsPost\r\n\t\t\t\t\t\t\tkey={objectID}\r\n\t\t\t\t\t\t\tauthor={author}\r\n\t\t\t\t\t\t\tcreated_at={created_at}\r\n\t\t\t\t\t\t\tnum_comments={num_comments}\r\n\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t\tpoints={points}\r\n\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default News;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport News from './containers/News'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<News />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}